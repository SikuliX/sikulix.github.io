(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{116:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return d}));var a=n(0),i=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=i.a.createContext({}),b=function(e){var t=i.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=b(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,r=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=b(n),u=a,d=p["".concat(r,".").concat(u)]||p[u]||h[u]||o;return n?i.a.createElement(d,s(s({ref:t},c),{},{components:n})):i.a.createElement(d,s({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,r=new Array(o);r[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,r[1]=s;for(var c=2;c<o;c++)r[c]=n[c];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(3),i=n(7),o=(n(0),n(116)),r={id:"region",title:"Region",sidebar_label:"Region"},s={unversionedId:"api/region",id:"api/region",isDocsHomePage:!1,title:"Region",description:"Creating a Region",source:"@site/docs\\api\\region.md",slug:"/api/region",permalink:"/docs/api/region",editUrl:"https://github.com/SikuliX/sikulix.github.io/edit/website/docs/api/region.md",version:"current",sidebar_label:"Region",sidebar:"docs",previous:{title:"Global Settings",permalink:"/docs/api/global"},next:{title:"Location",permalink:"/docs/api/location"}},l=[{value:"Creating a Region",id:"creating-a-region",children:[]},{value:"Region grid",id:"region-grid",children:[]},{value:"Finding an element within Region",id:"finding-an-element-within-region",children:[]},{value:"Observing visual events",id:"observing-visual-events",children:[]},{value:"Region Actions",id:"region-actions",children:[]},{value:"Extracting Text from a Region",id:"extracting-text-from-a-region",children:[]},{value:"Mouse and Keyboard Actions",id:"mouse-and-keyboard-actions",children:[]},{value:"Exception FindFailed",id:"exception-findfailed",children:[]}],c={toc:l};function b(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"creating-a-region"},"Creating a Region"),Object(o.b)("p",null,"The ",Object(o.b)("inlineCode",{parentName:"p"},"Region")," is besides Images/Patterns (called Visuals) and Matches (where a Visual was found and how) the basic element in the SikuliX concept. So be sure, you have understood all aspects of a Region."),Object(o.b)("p",null,"A Region is a rectangular area on a Screen and is defined by\nits upper left corner (x, y) being the pixel with this offset relative to the upper left corner of the screen (usually (0, 0) ) and\nits dimension (w, h) as its width and height in pixels.\nx, y, w, h are integer numbers counting a distance in pixels."),Object(o.b)("p",null,"A Region does not know anything about it\u2019s visual content (windows, pictures, graphics, text, \u2026). It only knows the position on the screen and its dimension."),Object(o.b)("p",null,"A Match, being the result of a ",Object(o.b)("inlineCode",{parentName:"p"},"Region.find()")," operation, basically is a ",Object(o.b)("inlineCode",{parentName:"p"},"Region")," in all aspects, just having a few additional attributes specific for a find result."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\nNew Regions can be created in various ways:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"specify their position and dimension"),Object(o.b)("li",{parentName:"ul"},"extend a given Region in all directions (expand or shrink)"),Object(o.b)("li",{parentName:"ul"},"based on adjacent rectangles up to the bounds of the screen horizontally or vertically."),Object(o.b)("li",{parentName:"ul"},"based on their corners"),Object(o.b)("li",{parentName:"ul"},"as subregions being rows, columns or cells of a regular grid"),Object(o.b)("li",{parentName:"ul"},"combine different Regions or use their intersection")),Object(o.b)("p",null,"You can use ",Object(o.b)("inlineCode",{parentName:"p"},"Region.find()"),", to search a given Visual being a rectangular pixel pattern (given as an Image (filename or Image) or a ",Object(o.b)("inlineCode",{parentName:"p"},"Pattern")," object) within this ",Object(o.b)("inlineCode",{parentName:"p"},"Region"),". If this Visual is found in the Region, the resulting Match object has a similarity score between >0 and 1. The lower the similarity score, the higher the chance, that you got a false positive (found something else). To make your scripts robust against false positives, you should take care, to get similarity scores >0.85 or even >0.9."),Object(o.b)("p",null,"If the Visual is given for the search as an Image , SikuliX uses a minimum similarity of 0.7, which only returns Matches with a score >0.7. This default value can be changed in ",Object(o.b)("inlineCode",{parentName:"p"},"Settings.MinSimilarity"),". A Pattern is searched with the optionally given minimum similarity using ",Object(o.b)("inlineCode",{parentName:"p"},"Pattern.similar()"),"."),Object(o.b)("p",null,"Find operations return a Match object, which has all attributes and methods of a Region and can be used in the same way as a Region (e.g. find something or click another target inside). A Match has the size in pixels of the Visual used for searching, the position where it was found, the similarity score and the elapsed time."),Object(o.b)("p",null,"Look here for more detailed information on How SikuliX finds images on the screen."),Object(o.b)("p",null,"Be aware: every mouse or keyboard action, that specifies a Visual to search for, will internally do the respective find operation first, to evaluate the action target."),Object(o.b)("p",null,"A ",Object(o.b)("inlineCode",{parentName:"p"},"Region")," remembers the match of the last successful find operation, all matches of the last successful ",Object(o.b)("inlineCode",{parentName:"p"},"Region.findAll()")," and the elapsed time. With ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatch()"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatches()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastTime()")," you can get these objects/value."),Object(o.b)("p",null,"You can wait for a Pattern to appear using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.wait()")," or wait for it to vanish using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.waitVanish()")),Object(o.b)("p",null,"Every not successful find operation (even those done internally with a ",Object(o.b)("inlineCode",{parentName:"p"},"click()")," \u2026) will raise a ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed")," exception, that has to be handled in your script. If you do not do that, your script will simply stop here with an error."),Object(o.b)("p",null,"If you do not want to handle these ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed")," exceptions, you might search for a Pattern using exists, which just returns nothing (None/null) in case of not found. So you simply check the return value for being a Match."),Object(o.b)("p",null,"For other options to handle ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed")," situations see ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed")," exception."),Object(o.b)("p",null,"During a find operation internally the search is repeated with a scan rate (standard 3 per second) until success or an optionally given timeout (standard 3 seconds) is reached, which then results in a ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed")," exception."),Object(o.b)("p",null,"SikuliX supports visual event driven programming: You can tell a ",Object(o.b)("inlineCode",{parentName:"p"},"Region")," to observe that something appears, vanishes or changes. It is possible to wait for the completion of an observation or let it run in the background, while your script continues running. When one of the visual events happens, a handler in your script is called. Each ",Object(o.b)("inlineCode",{parentName:"p"},"Region")," can only have one observer, but each observer can observe multiple visual events in that Region. "),Object(o.b)("h4",{id:"create-a-region-set-and-get-attributes"},"Create a Region, Set and Get Attributes"),Object(o.b)("p",null,"In any case a newly created Region will be restricted to the boundaries of the screen containing the largest part of the new ",Object(o.b)("inlineCode",{parentName:"p"},"Region"),"."),Object(o.b)("p",null,"It displays an error, if no part of the newly created Region is contained by any of the available screens. Subsequent usages of such a ",Object(o.b)("inlineCode",{parentName:"p"},"Region")," might result in errors, exceptions or even crashes, if features are used, that access the screen."),Object(o.b)("p",null,"Use ",Object(o.b)("inlineCode",{parentName:"p"},"Region.isValid()")," to check, wether a Region is contained by a screen."),Object(o.b)("p",null,"Create a new Region based on top left corner and size"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\nRegion(x, y, w, h)\nRegion(region)\nRegion(Rectangle)\nCreate a region object"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\n",Object(o.b)("inlineCode",{parentName:"li"},"x")," \u2013 x position of top left corner\n",Object(o.b)("inlineCode",{parentName:"li"},"y")," \u2013 y position of top left corner.\n",Object(o.b)("inlineCode",{parentName:"li"},"w")," \u2013 width of the region.\n",Object(o.b)("inlineCode",{parentName:"li"},"h")," \u2013 height of the region.\n",Object(o.b)("inlineCode",{parentName:"li"},"region")," \u2013 an existing Region object.\n",Object(o.b)("inlineCode",{parentName:"li"},"rectangle")," \u2013 an existing object of class java.awt.Rectangle"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na new Region object.")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"The position and dimension attributes are named x, y representing the top left corner and w, h being width and height. You might access/change these values directly or use the available getter/setter methods."))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-code"},"topLeft = Location(reg.x, reg.y) # equivalent to\ntopLeft = reg.getTopLeft()\n\ntheWidth = reg.w # getting the width equivalent to\ntheWidth = reg.getW()\n\nreg.w = theWidth # setting the width equivalent to\nreg.setW(theWidth)\n\n# same is available for the height: reg.h, reg.getH(), reg.setH()\n")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Additionally you might use selectRegion() to interactively create a new region at runtime."))),Object(o.b)("p",null,"Using ",Object(o.b)("inlineCode",{parentName:"p"},"Region(someOtherRegion)")," just duplicates this region (creates a new object). This can be useful, when you need the same Region with different attributes, such as another observation loop or another setting for ",Object(o.b)("inlineCode",{parentName:"p"},"Region.setThrowException()")," to control whether throwing an exception or not when find ops fail."),Object(o.b)("p",null,"Change a Regions position and/or size"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\nsetX(number)\nsetY(number)\nsetW(number)\nsetH(number)\nSet the respective attribute of the region to the new value. This effectively moves the region around and/or changes its dimension."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tnumber \u2013 the new value")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"moveTo(location)"),"\nSet the position of this region regarding it\u2019s top left corner to the given location (the x and y values are modified)."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tlocation \u2013 location object becomes the new top left corner"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe modified region object\n",Object(o.b)("inlineCode",{parentName:"li"},"reg.moveTo(anotherLocation) # equivalent to reg.setX(anotherLocation.x); reg.setY(anotherLocation.y)"))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setROI(x, y, w, h)"),"\n",Object(o.b)("strong",{parentName:"p"},"setROI(rectangle)"),"\n",Object(o.b)("strong",{parentName:"p"},"setRect(x, y, w, h)"),"\n",Object(o.b)("strong",{parentName:"p"},"setRect(rectangle)"),"\nAll these methods are doing exactly the same:\nsetting position and dimension to new values. The motivation for two names is to make scripts more readable: setROI() is intended to restrict the search to a smaller area to speed up processing searches (region of interest), whereas setRect() should be used to change a region (move and/or shrink or enlarge)."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nx, y, w, h (all) \u2013 the attributes of a rectangle\nrectangle \u2013 a rectangle object"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\nNone")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"morphTo(region)"),"\nSet the position and dimension of this region to the corresponding values of the region given as parameter. (see: setRect())"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tregion \u2013 a region object"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe modified region object")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-code"},"reg.morphTo(anotherRegion) # equivalent to\nr = anotherRegion; reg.setX(r.x); reg.setY(r.y); reg.setW(r.w); reg.setH(r.h)\n")),Object(o.b)("p",null,"Access a Region\u2019s attributes and settings"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"getX()"),"\n",Object(o.b)("strong",{parentName:"p"},"getY()"),"\n",Object(o.b)("strong",{parentName:"p"},"getW()"),"\n",Object(o.b)("strong",{parentName:"p"},"getH()"),"\nGet the respective attribute of the region."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tinteger value")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getCenter()"),"\nGet the center of the region.\\"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tan object of Location")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getTopLeft()"),"\n",Object(o.b)("strong",{parentName:"p"},"getTopRight()"),"\n",Object(o.b)("strong",{parentName:"p"},"getBottomLeft()"),"\n",Object(o.b)("strong",{parentName:"p"},"getBottomRight()"),"\nGet the location of the region\u2019s respective corner"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tLocation object")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getScreen()"),"\nReturns the screen object that contains this region."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta new Screen object\nSee Multi Monitor Environments.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getLastMatch()"),"\n",Object(o.b)("strong",{parentName:"p"},"getLastMatches()"),"\nTo access the Matches returned by the last find op in this Region."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta Match object or a list of Match objects\nAll basic find operations (explicit like ",Object(o.b)("inlineCode",{parentName:"li"},"Region.find()")," or implicit like ",Object(o.b)("inlineCode",{parentName:"li"},"Region.click()"),") store the match in lastMatch and multi-find ops (like ",Object(o.b)("inlineCode",{parentName:"li"},"Region.findAll()"),") all found matches into lastMatches of the Region that was searched.")),Object(o.b)("p",null,"How to go through the Matches returned by getLastMatches()."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"The LastMatch can be used to avoid a second search for the same Visual in sequences like:"))),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-code"},"wait(someVisual)\nclick(someVisual)\n# or\nif exists(someOtherVisual):\n        click(someOtherVisual)\n")),Object(o.b)("p",null,"To avoid the second search with the click() you can use:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-code"},"wait(someVisual)\nclick(getLastMatch())\n# or\nif exists(someOtherVisual):\n        click(getLastMatch())\n")),Object(o.b)("p",null,"There are convenience shortcuts for this:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-code"},"wait(someVisual)\nclick()\n# or\nif exists(someOtherVisual):\n        click()\n")),Object(o.b)("p",null,"See ",Object(o.b)("inlineCode",{parentName:"p"},"Region.click()")," for the usage of these convenience shortcuts. A ",Object(o.b)("inlineCode",{parentName:"p"},"someRegion.click()")," will either click the center of the given Region or the ",Object(o.b)("inlineCode",{parentName:"p"},"lastMatch"),", if any is available."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getTime()")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe elapsed time in number of milli-seconds of the last find op in this Region\nAttributes influencing the behavior of features of a Region")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"isRegionValid()")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tFalse, if the Region is not contained by a Screen and hence cannot be used with faetures, that need a Screen (find, capture, \u2026), otherwise True.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setAutoWaitTimeout(seconds)"),"\nSet the maximum waiting time for all subsequent find operations in that Region."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tseconds \u2013 a number, which can have a fraction. The internal granularity is milli-seconds.\nAll subsequent find ops will be run with the given timeout instead of the current value of Settings.AutoWaitTimeout, to which the region is initialized at time of creation (default 3 seconds).")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getAutoWaitTimeout()"),"\nGet the current value of the maximum waiting time for find ops in this region."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ttimeout in seconds")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setWaitScanRate(rate)"),"\nSet this Region\u2019s value: A find op should repeat the search for the given Visual rate times per second until found or the maximum waiting time is reached. At time of Region creation the value is initialized from Settings.WaitScanRate, which has a default of 3."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\trate \u2013 a value > 0. values < 1 will lead to scans every x seconds and hence longer pauses between the searches (reduces cpu load).")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getWaitScanRate()"),"\nGet the current value of this Region\u2019s ",Object(o.b)("inlineCode",{parentName:"p"},"WaitScanRate"),"."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe rate number")),Object(o.b)("h2",{id:"region-grid"},"Region grid"),Object(o.b)("p",null,"Get evenly sized parts of a Region (as rows, columns and cells based on a raster)\nIn many cases, one has parts of a GUI, that are to some extent evenly structured, having some virtual raster (rows, columns and/or cells), that one wants to use for restricting searches or walk through this parts for other reasons."),Object(o.b)("p",null,"Typical examples are tables like in an Excel sheet, boxes in some GUI or on a webpage or dropdown lists and menues."),Object(o.b)("p",null,"A given Region can be set to have some evenly sized raster, so that one can access these subregions and create new Regions."),Object(o.b)("p",null,"Convenience functions, to get a subregion from a specified raster in one step"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"get(somePart)"),"\nSelect a part of the given Region based on the given part specifier."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tsomePart \u2013 a constant as Region.CONSTANT or an integer between 200 and 999 (see below)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta new Region created from the selected part")),Object(o.b)("p",null,"Usage based on the javadocs:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"Constants for the top parts of a region (Usage: Region.CONSTANT)\nshown in brackets: possible shortcuts for the part constant\nNORTH (NH, TH) - upper half\nNORTH_WEST (NW, TL) - left third in upper third\nNORTH_MID (NM, TM) - middle third in upper third\nNORTH_EAST (NE, TR) - right third in upper third\n... similar for the other directions:\nright side: EAST (Ex, Rx)\nbottom part: SOUTH (Sx, Bx)\nleft side: WEST (Wx, Lx)\n\nspecials for quartered:\nTT top left quarter\nRR top right quarter\nBB bottom right quarter\nLL bottom left quarter\n\nspecials for the center parts:\nMID_VERTICAL (MV, CV) half of width vertically centered\nMID_HORIZONTAL (MH, CH) half of height horizontally centered\nMID_BIG (M2, C2) half of width / half of height centered\nMID_THIRD (MM, CC) third of width / third of height centered\n\nBased on the scheme behind these constants there is another possible usage:\nspecify part as e 3 digit integer where the digits xyz have the following meaning\n1st x: use a raster of x rows and x columns\n2nd y: the row number of the wanted cell\n3rd z: the column number of the wanted cell\ny and z are counting from 0\nvalid numbers: 200 up to 999 (< 200 are invalid and return the region itself)\nexample: get(522) will use a raster of 5 rows and 5 columns and return the cell in the middle\nspecial cases:\nif either y or z are == or > x: returns the respective row or column\nexample: get(525) will use a raster of 5 rows and 5 columns and return the row in the middle\n")),Object(o.b)("p",null,"Internally this is based on ",Object(o.b)("inlineCode",{parentName:"p"},"Region.setRaster()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getCell()"),"."),Object(o.b)("p",null,"If you need only one row in one column with x rows or only one column in one row with x columns you can use Region.getRow() or Region.getCol()"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getRow(whichRow, numberRows)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nnumberRows \u2013 in how many evenly sized rows should the region be devided\nwhichRow \u2013 the row to select counting from 0, negative counts backwards from the end"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na new Region created from the selected row")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getCol(whichColumn, numberColumns)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nnumberColumns \u2013 in how many evenly sized columns should the region be devided\nwhichColumn \u2013 the column to select counting from 0, negative counts backwards from the end"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na new Region created from the selected column")),Object(o.b)("p",null,"The basic functions for any raster setup"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\nsetRows(numberRows)\nsetCols(numberColumns)\nDefine a rows or columns only raster, by dividing the Region\u2019s respective dimension into even parts. The corresponding Regions will only be created, when the respective access methods are used later."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nnumberRows \u2013 the number of rows the Region should be devided in\nnumberColumns \u2013 the number of columns the Region should be devided in"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\nthe first element as new Region if successful or the region itself otherwise")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setRaster(numberRows, numberColumns)"),"\nDefine a raster, by deviding the Region\u2019s height in numberRows even sized rows and it\u2019s width into numberColumns even sized columns."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nnumberRows \u2013 the number of rows the Region should be devided in\nnumberColumns \u2013 the number of columns the Region should be devided in"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\nthe top left cell (getCell(0, 0)) if success, the Region itself if not")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getRow(whichRow)"),"\n",Object(o.b)("strong",{parentName:"p"},"getCol(whichColumn)"),"\nGet the Region of the whichRow row or whichColumn column in the Region\u2019s valid raster counting from 0. Negative values will count backwards from the end. Invalid indexes will return the last or first element respectively."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nwhichRow \u2013 the number of the row to create a new Region from\nwhichColumn \u2013 the number of the column to create a new Region from"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na new Region representing the selected element or the Region if no raster")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getCell(whichRow, whichColumn)"),"\nGet the cell with the coordinates (whichRow, whichColumn) in the Region\u2019s valid raster counting from 0. Negative values will count backwards from the end. Invalid indexes will return the last or first element respectively. If the current raster only has rows or columns, the element of the corresponding index will be returned."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nwhichRow \u2013 the number of the row\nwhichColumn \u2013 the number of the column"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na new Region representing the selected element or the Region itself if no raster")),Object(o.b)("p",null,"getting information about the current raster"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"isRasterValid()"),"\nCan be used to check, wether the Region currently has a valid raster"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tTrue if it has a valid raster (either getCols or getRows or both would return > 0)")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getRows()"),"\n",Object(o.b)("strong",{parentName:"p"},"getCols()")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe current raster setting (0 means not set) as number of rows/columns")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getRowH()"),"\n",Object(o.b)("strong",{parentName:"p"},"getColW()")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe current raster setting (0 means not set) as height of one row or width of one column.")),Object(o.b)("p",null,"Extend Regions and create new Regions based on existing Regions"),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"These methods return new Region objects, whose location and size are based on the specified region.\nthe given base Region remains unchanged.\nIn any case the new Region will be restricted to the boundaries of the screen containing the largest part of the new Region."),Object(o.b)("p",{parentName:"div"},"It displays an error, if no part of the new Region is contained by any of the available screens. Subsequent usages of such a Region object might result in errors, exceptions or even crashes, if features are used, that acces the screen."),Object(o.b)("p",{parentName:"div"},"Use Region.isValid() to check, wether a Region is contained by a screen."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"offset(location)"),"\n",Object(o.b)("strong",{parentName:"p"},"offset(x, y)"),"\nCreates a new Region object, whose upper left corner is relocated adding the given x and y values to the respective values of the given Region. Width and height are the same."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Parameters"),":\nlocation \u2013 a Location object providing the relocating x and y values\nx \u2013 a number being the offset horizontally (< 0 to the left, > 0 to the right)\ny \u2013 a number being the offset vertically (< 0 to the top, > 0 to the bottom)")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Returns"),":\nthe new Region object"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-code"},"new_reg = reg.offset(Location(xoff, yoff)) # same as\nnew_reg = Region(reg.x + xoff, reg.y + yoff, reg.w, reg.h)\n")))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"inside()"),"\nReturns the same object. Retained for upward compatibility. region.inside().find() is totally equivalent to region.find()."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tRegion itself")),Object(o.b)("p",null,"NOTE: Besides the individual methods like nearby, left, right, above, below there is one new method grow with some more options and different signatures. Where documented together, they are fully equivalent. The reason behind is some better compatibility to the usage of Java Rectangle."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"grow(","[range]",")"),"\n",Object(o.b)("strong",{parentName:"p"},"nearby(","[range]",")"),"\nThe new region is defined by extending (>0) or shrinking (<0) the current region\u2019s dimensions in all directions by range number of pixels. The center of the new region remains the same."),Object(o.b)("p",null,"   The default is taken from Settings.DefaultPadding (standard value 50)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\trange \u2013 an integer indicating the number of pixels or the current default if omitted."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta new Region object")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"above(","[range]",")"),"\n",Object(o.b)("strong",{parentName:"p"},"below(","[range]",")"),"\n",Object(o.b)("strong",{parentName:"p"},"left(","[range]",")"),"\n",Object(o.b)("strong",{parentName:"p"},"right(","[range]",")"),"\nReturns a new Region that is defined with respect to the given region:\nabove: new bottom edge next pixel row above given region\u2019s top edge\nbelow: new top edge next pixel row below given region\u2019s bottom edge\nleft: new right edge next pixel clomn left of given region\u2019s left edge\nright: new left edge next pixel column right of given region\u2019s right edge\nIt does not include the current region. If range is omitted, it reaches to the corresponding edge of the screen."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\trange \u2013 a positive integer defining the new demension aspect (width or height)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta new Region object\ngrow(width, height)\nsame as grow(range), but with separate values horizontally and vertically. 0 means no change.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"grow(left, right, top, bottom)"),"\nsame as grow(range), but with a separate value for each side. 0 means no change."),Object(o.b)("h2",{id:"finding-an-element-within-region"},"Finding an element within Region"),Object(o.b)("p",null,"Besides acting on visual objects, finding them is one of the core functions of SikuliX."),Object(o.b)("p",null,"PARAMETER PS: means, that either a Pattern or a string (path to an image file or just plain text) can be used as parameter. A find operation is successful, if the given image is found with the given minimum similarity or the given text is found as specified."),Object(o.b)("p",null,"Similarity is a value between 0 and 1, that tells us how likely the given image looks like (matches) the target (the higher the value the higher the probability of an exact match). With most features, the similarity is trimmed to 2 decimals and a value greater than 0.99 meaning exact match (reported as 1.00). The default similarity used for searching is 0.7, if not specified using a Pattern. A search success (a match) is reported, if an image is found with a similarity score higher than the given similarity, which might be the default."),Object(o.b)("p",null,"Normally all these region methods are used as reg.find(PS), where reg is a region object."),Object(o.b)("p",null,"In SikuliX scripts: If written as find(PS) it acts on the default screen, which is an implicit region in this case (see: SCREEN as Default Region). But in most cases it is a good idea to use reg.find() to restrict the search to a smaller region in order to speed up processing."),Object(o.b)("p",null,"BE AWARE with Java or other scripting/programming languages not supported by the SikuliX IDE/scripting feature: you must always use the so called dotted version of the Region methods (someRegion.find(someImage))."),Object(o.b)("p",null,"If a find operation is successful, the returned match is additionally stored internally with the region that was used for the search. So instead of using a variable to store the match ( m = reg.find() ), you can use reg.getLastMatch() to access it afterwards. Unsuccessful find operations will leave these values unchanged."),Object(o.b)("p",null,"By default, if the visual object (image or text) cannot be found, Sikuli will stop the script by raising an Exception FindFailed. Following the standards of the Python language, you could handle such exceptions using try: ... except: .... The same is true for other scripting/programming languages."),Object(o.b)("p",null,"If you are not used to programming using the Python language or because of other reasons, you might just want to bypass the exception handling, which means just ignoring it (None is returned in that case). Or you might interactively react on a FindFailed situation (e.g. optionally repeat the find). Read more about concepts and options at: Exception FindFailed."),Object(o.b)("p",null,"If you have multiple monitors, please read Multi Monitor Environments."),Object(o.b)("p",null,"Note on IDE: Capturing is a tool in the IDE, to quickly set up images to search for. These images are named automatically by the IDE and stored together with the script, at the time it is saved (we call the location in the file system bundle-path). Behind the curtain, the images itself are specified simply by using a string containing the file name (path to an image file)."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"find(PS)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tPS \u2013 a Pattern object or a string (path to an image file or just plain text)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta Match object that contains the best match or fails if not found\nFind a particular pattern, which is the given image or just plain text. It searches within the region and returns the best match, that shows a similarity greater than the minimum similarity given by the pattern. If no similarity was set for the pattern by Pattern.similar() before, a default minimum similarity of 0.7 is set automatically.")),Object(o.b)("p",null,"Be aware find(PS) does not wait for the appearence, it just comes back after one search try and will throw FindFailed in case of not found."),Object(o.b)("p",null,"Side Effect lastMatch: the best match can be accessed using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatch()")," afterwards."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"findAll(PS)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tPS \u2013 a Pattern object or a string (path to an image file or just plain text)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tone or more Match objects as an iterator object or fails if not found\nHow to iterate through is documented here.")),Object(o.b)("p",null,"Repeatedly find ALL instances of a pattern, until no match can be found anymore, that meets the requirements for a single Region.find() with the specified pattern."),Object(o.b)("p",null,"By default, the returned matches are sorted by the similiarty. If you need them ordered by their positions, say the Y coordinates, you have to use Python\u2019s sorted function. Here is a example of sorting the matches from top to bottom:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},'def by_y(match):\n   return match.y\n\nicons = findAll("png_icon.png")\n# sort the icons by their y coordinates and put them into a new variable sorted_icons\nsorted_icons = sorted(icons, key=by_y)\n# another shorter version is using lambda.\nsorted_icons = sorted(icons, key=lambda m:m.y)\nfor icon in sorted_icons:\n   pass # do whatever you want to do with the sorted icons\n')),Object(o.b)("p",null,"Side Effect ",Object(o.b)("inlineCode",{parentName:"p"},"lastMatches"),": a reference to the returned iterator object containing the found matches is stored with the region that was searched. It can be accessed using ",Object(o.b)("inlineCode",{parentName:"p"},"getLastMatches()")," afterwards. How to iterate through an iterator of matches is documented here."),Object(o.b)("p",null,"Convenience methods"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},'findAllByRow() # sorted along rows top down - left to right in a row\nfindAllByColumn() # sorted along columns left to right - top down in a column\n\nfindAllList() # same as findAll(), but returns a list (Java: List<Match>) sorted by score descending\ngetAll() # shortcut for findAllList()\n\nAll these methods return lists (Java: List<match>) - an empty list if nothing was found.\n\nIn Python scripts this works (empty list is taken as False):\n\nmatches = getAll(someImage)\nif matches:\n    print "found: ", len(matches)\nelse:\n    print "not found", someImage\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"wait(","[PS][, seconds]",")"),"\nWait until the given pattern PS appears in the region."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Param PS:\ta Pattern object or a string (path to an image file or just plain text)"),Object(o.b)("li",{parentName:"ul"},"Param seconds:\ta number, which can have a fraction, as maximum waiting time in seconds. The internal granularity is milliseconds. If not specified, the auto wait timeout value set by Region.setAutoWaitTimeout() is used. Use the constant FOREVER to wait for an infinite time."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta Match object that contains the best match or fails if not found\nIf PS is not specified, the script just pauses for the specified amount of time. It is still possible to use sleep(seconds) instead, but this is deprecated.")),Object(o.b)("p",null,"If PS is specified, it keeps searching the given pattern in the region until the image appears ( would have been found with Region.find()) or the specified amount of time has elapsed. At least one find operation is performed, even if 0 seconds is specified.)"),Object(o.b)("p",null,"Side Effect lastMatch: the best match can be accessed using Region.getLastMatch() afterwards."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"You may adjust the scan rate (how often a search during the wait takes place) by setting Settings.WaitScanRate appropriately."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"waitVanish(PS","[, seconds]",")"),"\nWait until the given pattern PS in the region vanishes."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nPS \u2013 a Pattern object or a string (path to an image file or just plain text)\nseconds \u2013 a number, which can have a fraction, as maximum waiting time in seconds. The internal granularity is milliseconds. If not specified, the auto wait timeout value set by Region.setAutoWaitTimeout() is used. Use the constant FOREVER to wait for an infinite time."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\nTrue if the pattern vanishes within the specified waiting time, or False if the pattern stays visible after the waiting time has elapsed.")),Object(o.b)("p",null,"This method keeps searching the given pattern in the region until the image vanishes (can not be found with Region.find() any longer) or the specified amount of time has elapsed. At least one find operation is performed, even if 0 seconds is specified."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"You may adjust the scan rate (how often a search during the wait takes place) by setting Settings.WaitScanRate appropriately."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"exists(PS","[, seconds]",")"),"\nWait until the given pattern PS appears in the region. Does not throw FindFailed."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nPS \u2013 a Pattern object or a string (path to an image file or just plain text)\nseconds \u2013 a number, which can have a fraction, as maximum waiting time in seconds. The internal granularity is milliseconds. If not specified, the auto wait timeout value set by Region.setAutoWaitTimeout() is used. Use the constant FOREVER to wait for an infinite time."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na Match object that contains the best match. None is returned, if nothing is found within the specified waiting time")),Object(o.b)("p",null,"Does exactly the same as ",Object(o.b)("inlineCode",{parentName:"p"},"Region.wait()"),", but no exception is raised in case of ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed"),". So it can be used to symplify scripting in case that you only want to know wether something is there or not to decide how to proceed in your workflow. So it is typically used with an if statement. At least one find operation is performed, even if 0 seconds is specified. So specifying 0 seconds saves some time, in case there is no need to wait, since its your intention to get the information \u201cnot found\u201d directly."),Object(o.b)("p",null,"Side Effect ",Object(o.b)("inlineCode",{parentName:"p"},"lastMatch"),": the best match can be accessed using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatch()")," afterwards."),Object(o.b)("p",null,"Note: You may adjust the scan rate (how often a search during the wait takes place) by setting Settings.WaitScanRate appropriately."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"has(PS","[, seconds]",")"),"\nChecks wether the given pattern PS is visible in the region. Does not throw FindFailed.\nSame as Region.exists(), but returns true if found and false otherwise. So it is a convenience wrapper intended to be used in logical expressions (if, while, \u2026).\nIf you need the match in case of found, you have to use Region.getLastMatch() afterwards.\nFind more than one image in a Region at the same time"),Object(o.b)("p",null,"In a Region one wants to look for more than one image at the same time and analyse the resulting matches. This approach can be used for example, to differentiate between GUI states, verify larger patterns by only searching for parts of it or find out the best match for variants of an image."),Object(o.b)("p",null,"Internally the searches for the given images are run in parallel against the same screenshot taken at start of the operation, to optimize the overall searchtime."),Object(o.b)("p",null,"The result is a list of matches, where each match carries a zero-based index, pointing to the corresponding image in the given list of images. Hence this index is the base information for the post-processing of the matches if any (the list of matches is empty in case none of the given images matched)."),Object(o.b)("p",null,"Use match.getIndex() to identify the only matching image (\u2026Best) or the corresponding matching image (\u2026Any) from the images (index left to right, zero-based) or from the given image list (zero-based)."),Object(o.b)("p",null,"Supposing the variables img0, img1, img2, img3 have been setup before as image filenames or patterns, then the following example would print, if all images are visible in that moment except img1:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"images = [img0, img1, img2, img3]\nmatches = findAnyList(images)\nfor match in matches:\n    print match.getIndex(), match.getScore(), match.toStringShort()\n\n# prints out something like:\n0 0.999999761581 M[137,46 136x28]@S(0)\n2 0.999999761581 M[368,99 124x27]@S(0)\n3 0.999994277954 M[489,72 220x29]@S(0)\n")),Object(o.b)("p",null,"Currently there are 2 features available, based on this concept:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"findBest(img0, img1, img2, ...) and findBestList(ListOfImages) return the best match of all (might be null)"),Object(o.b)("li",{parentName:"ul"},"findAny(img0, img1, img2, ...) and findAnyList(ListOfImages) return a list of matches (might be empty)")),Object(o.b)("p",null,"The variant having as parameter (img0, img1, img2, ...) expects an arbitrary number of image filenames and/or patterns."),Object(o.b)("p",null,"The \u2026List variant expects a prepared Tuple/List, that contains an arbitrary number of image filenames and/or patterns."),Object(o.b)("p",null,"This is an example for ",Object(o.b)("inlineCode",{parentName:"p"},"findBest()"),":"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'match = findBest(img0, img1, img2, img3)\nif match:\n    print "found img%d" % match.getIndex()\n\n# prints out something like\nfound img1\n')),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"waitBest(), waitBestList(), waitAny(), waitAnyList()")),Object(o.b)("p",null,"These are variants, that wait for some time, until the first match is found. If the wait time exceeds without finding anything, it fails and returns null or an empty list accordingly. Usage same as the find\u2026 variants."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"findBest(PS...)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tPS... \u2013 one or more image filenames and/or patterns as a variable parameterlist"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta Match object that contains the best match or None if no image was found at all")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"waitBest(waitTime, PS...)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nPS... \u2013 one or more image filenames and/or patterns as a variable parameterlist\nwaitTime \u2013 the max time to wait in seconds for the first match"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na Match object that contains the best match or None if no image was found at all")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"findBestList(ListPS)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tListPS \u2013 a Tuple/List containing one or more image filenames and/or patterns"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta Match object that contains the best match or None if no image was found at all")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"waitBestList(ListPS)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nListPS \u2013 a Tuple/List containing one or more image filenames and/or patterns\nwaitTime \u2013 the max time to wait in seconds for the first match"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na Match object that contains the best match or None if no image was found at all")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"findAny(PS...)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tPS... \u2013 one or more image filenames and/or patterns as a variable parameterlist"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta list of matches for the images found")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"waitAny(waitTime, PS...)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nPS... \u2013 one or more image filenames and/or patterns as a variable parameterlist\nwaitTime \u2013 the max time to wait in seconds for the first match"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na list of matches for the images found")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"findAnyList(ListPS)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tListPS \u2013 a Tuple/List containing one or more image filenames and/or patterns"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta list of matches for the images found")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"waitAnyList(waitTime, ListPS)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nListPS \u2013 a Tuple/List containing one or more image filenames and/or patterns\nwaitTime \u2013 the max time to wait in seconds for the first match"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na list of matches for the images found")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"observing-visual-events"},"Observing visual events"),Object(o.b)("p",null,"You can tell a region to observe that something appears or vanishes, or something changes in that region. Using the methods ",Object(o.b)("inlineCode",{parentName:"p"},"Region.onAppear()"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Region.onVanish()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Region.onChange()"),", you register an event to be observed, while the observation is running for that ",Object(o.b)("inlineCode",{parentName:"p"},"Region"),". The observation in a ",Object(o.b)("inlineCode",{parentName:"p"},"Region")," is started using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.observe()")," and stopped again using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.stopObserver()"),"."),Object(o.b)("p",null,"Each ",Object(o.b)("inlineCode",{parentName:"p"},"Region")," can have exactly one observer. For each observer, you can register as many events as needed. So you can think of it as grouping some ",Object(o.b)("inlineCode",{parentName:"p"},"wait()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"waitVanish()")," together and have them processed simultanouesly, while you are waiting for one of these events to happen."),Object(o.b)("p",null,"It is possible to let the script wait for the completion of an observation or let the observation run in background (meaning in parallel), while your script is continuing. With a timing parameter you can tell ",Object(o.b)("inlineCode",{parentName:"p"},"Region.observeInBackground()")," to stop observation after the given time."),Object(o.b)("p",null,"When one of the visual events happens, an event handler (callback function) provided by you is called, handing over a ",Object(o.b)("inlineCode",{parentName:"p"},"ObserveEvent")," object as a parameter, that contains all relevant information about the event and that has features to act on the events or change the behavior of the observation. During the processing in your handler, the observation is paused until your handler has ended. Information between the main script and your handlers can be given forward and backward using global variables or other appropriate measures."),Object(o.b)("p",null,"Another option to handle events, that are observed in the background, is to check the status of the observation inline in your workflow. Each registered event has a unique name, that later can be used, to check, wether it already happened or not. Furthermore you can inactivate registered events, so that they are ignored until activated again (see: Named Events)."),Object(o.b)("p",null,"It\u2019s your responsibility to stop the observation. This can either be done by calling ",Object(o.b)("inlineCode",{parentName:"p"},"Region.stopObserver()")," (in the main workflow or in the handler) or by starting the observation with a timing parameter. All running observations are stopped automatically, when the script or Java program (in fact the JVM) terminates."),Object(o.b)("p",null,"Since you can have as many region objects as needed and each region can have one observation active and running, theoretically it is possible to have as many visual events being observed at the same time as needed. But in reality, the number of observations is limited by the system resources available to SikuliX at that time."),Object(o.b)("p",null,"Be aware, that every observation is a number of different find operations that are processed repeatedly. So to speed up processing and keep your script acting, you should define a region for observation as small as possible. You may adjust the scan rate (how often a search during the observation takes place) by setting ",Object(o.b)("inlineCode",{parentName:"p"},"Settings.ObserveScanRate")," appropriately."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"PS"),": as a parameter in the following methods you have to specify a Pattern or a String (path to an image file or just plain text)."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"handler"),": as a parameter in the following methods you have to specify the name of a function, which will be called by the observer, in case the observed event happens. The function name (and usually the function itself) has to be defined in your script before using the appropriate functions to register an observe event. The existance of the function will be checked after starting the script, but before running it."),Object(o.b)("p",null,"So to get your script running, you have to have at least the following statements in your script:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'def myHandler(event): # you can choose any valid function name\n        # event: can be any variable name, it references the ObserveEvent object\n        pass # add your statements here\n\nonAppear("path-to-an-image-file", myHandler) # or any other onXYZ()\nobserve(10) # observes for 10 seconds\nNote for Java And this is how you setup a handler in your Java program and run the observation:\n\n// one has to combine observed event and its handler\n// overriding the appropriate method\nsomeRegion.onAppear("path-to-an-image-file",\n        new ObserverCallBack() {\n                @Override\n                public void appeared(ObserveEvent event) {\n                        // here goes your handler code\n                }\n        }\n);\n// run observation in foreground for 10 seconds\nsomeRegion.observe(10)\n')),Object(o.b)("p",null,"Here ",Object(o.b)("inlineCode",{parentName:"p"},"ObserverCallBack")," is a class defining the possible callback funtions appeared, vanished and changed as well as ",Object(o.b)("inlineCode",{parentName:"p"},"findfailed")," and missing as noop-methods, that have to be overwritten as needed in your implementation of the ",Object(o.b)("inlineCode",{parentName:"p"},"ObserverCallBack"),". You only need to overwrite the one method, that corresponds to your event."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"onAppear(PS, handler)"),"\nWith the given region you register an APPEAR event, whose pattern/image/text is looked for to be there or to appaear while running an observation with the next call of ",Object(o.b)("inlineCode",{parentName:"p"},"observe()"),". In the moment the observation is successful for that event, your registered handler is called and the observation is paused until you return from your handler."),Object(o.b)("p",null,"   With the first appearence, the observation for this event is terminated. If you want the observation for this event to be continued, you have to use ",Object(o.b)("inlineCode",{parentName:"p"},"ObserveEvent.repeat()")," before leaving the handler."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\n",Object(o.b)("strong",{parentName:"li"},"PS")," \u2013 a Pattern object or a string (path to an image file or just plain text)\n",Object(o.b)("strong",{parentName:"li"},"handler")," \u2013 the name of a handler function in the script"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na string as unique name of this event to identify this event later")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"onVanish(PS, handler)"),"\nWith the given region you register a VANISH event, whose pattern/image/text is looked for to not be there or to vanish while running an observation with the next call of ",Object(o.b)("inlineCode",{parentName:"p"},"observe()"),". In the moment the observation is successful for that event, your registered handler is called and the observation is paused until you return from your handler."),Object(o.b)("p",null,"With the first vanishing, the observation for this event is terminated. If you want the observation for this event to be continued, you have to use ",Object(o.b)("inlineCode",{parentName:"p"},"ObserveEvent.repeat()")," before leaving the handler."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\n",Object(o.b)("strong",{parentName:"li"},"PS")," \u2013 a Pattern object or a string (path to an image file or just plain text.\n",Object(o.b)("strong",{parentName:"li"},"handler")," \u2013 the name of a handler function in the script"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na string as unique name of this event to identify this event later")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"onChange(","[minChangedSize, ]","handler)"),"\nWith the given region you register a CHANGE event. While running an observation with the next call of observe(), it is looked for changes in that region. A change is, if some non-overlapping rectengular areas of the given minimum size changes its pixel content from one observation step to the next. In the moment the observation is successful for that event, your registered handler is called and the observation is paused until you return from your handler."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nminChangedSize \u2013 the minimum size in pixels of a change to trigger a change event (see Settings.ObserveMinChangedPixels, default 50).\nhandler \u2013 the name of a handler function in the script"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\na string as unique name of this event to identify this event later")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"A subsequent onChange for the same Region object overwrites an existing onChange, while keeping the name of the existing onChange."))),Object(o.b)("p",null,"Here is a example that highlights all changes in an observed region."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'def changed(event):\n        print "something changed in ", event.region\n        for ch in event.getChanges():\n                ch.highlight() # highlight all changes\n        wait(1)\n        for ch in event.getChanges():\n                ch.highlight() # turn off the highlights\n\nr = selectRegion("select a region to observe")\n# any change in r larger than 50 pixels would trigger the changed function\nr.onChange(50, changed)\n# another way to observe for 30 seconds\nr.observeInBackground(); wait(30)\nr.stopObserver()\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"observe(","[seconds]",")"),"\nBegin observation within the region. The script waits for the completion of the observation (meaning until the observation is stopped by intention or timed out)."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tseconds \u2013 a number, which can have a fraction, as maximum observation time in seconds. Use it without parameter as observeInBackground() or use the constant FOREVER to tell the observation to run for an infinite time (or until stopped by stopObserve())."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tTrue, if the observation could be started, False otherwise\nFor each region object, only one observation can be running at a given time, meaning, that a call to observe(), while an observe for that region is running, is ignored with an error message, returning False.")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"You may adjust the scan rate (how often a search during the observation takes place) by setting Settings.ObserveScanRate appropriately."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"observeInBackground(","[seconds]",")"),"\nThe observation is run in the background, meaning that the observation will be run in a subthread and processing of your script is continued immediately."),Object(o.b)("p",null,"Take care, that your script continues with some time consuming stuff. Additionally Named Events might be of interest."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tseconds \u2013 a number, which can have a fraction, as maximum observation time in seconds. Use without parameter as observeInBackground() or use the constant FOREVER to tell the observation to run for an infinite time (or until stopped by stopObserve()).\nThe over all behavior and the features are the same as Region.observe().")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"observe(","[seconds, ]","background = True)"),"\nDEPRECATED (will not be in version 2+) Only available in Python scripts for some limited backward compatibility, with the impact, that the Region object must be a Python level Region. In case you have to cast a Java level Region using Region(someRegion)."),Object(o.b)("p",null,"It is strongly recommended to revise your scripts using this observe feature as soon as possible."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"stopObserver()"),"\nStop observation for this region."),Object(o.b)("p",null,"The source region of an observed visual event is available from the event that is passed as parameter to the handler function."),Object(o.b)("p",null,"Additionally there is a convenience feature to stop observation within a handler function: simply call ",Object(o.b)("inlineCode",{parentName:"p"},"event.stopObserver()")," inside the handler function.:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'def myHandler(event):\n        event.stopObserver() # stops the observation\n        # instead of\n        # event.getRegion().stopObserver()\n\nonAppear("path-to-an-image-file", myHandler)\nobserve(FOREVER) # observes until stopped in handler\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class ObserveEvent"),"\nWhen processing an observation in a region, a handler function is called, when one of your registered events ",Object(o.b)("inlineCode",{parentName:"p"},"Region.onAppear()"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Region.onVanish()")," or ",Object(o.b)("inlineCode",{parentName:"p"},"Region.onChange()")," happen."),Object(o.b)("p",null,"The one parameter, you have access to in your handler function is an instance of ObserveEvent. You have access to the following features of the event, that might help to identify the cause of the event, act on the resulting matches and optionally modify the behavior of the observation."),Object(o.b)("p",null,"The feature ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed")," and/or ImageMissing handler allows to specify functions that are visited in the case of these failures happening. The handler gets an ObserveEvent object as parameter, that can be used to analyse the situation and define how the situation should be handled finally"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getType()"),"\nget the type of the event"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta string containing APPEAR, VANISH, CHANGE, GENERIC, FINDFAILED, MISSING")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"isAppear(), isVanish(), isChange(), isGeneric(), isFindFailed(), isMissing()"),"\nconvenience methods, to check the type"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tTrue or False")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getRegion()"),"\nThe observing region of this event."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe region object")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getPattern()"),"\nGet the pattern that triggered this event. A given image is packed into the pattern. This is only valid for APPEAR and VANISH events as well as for FINDFAILED and MISSING."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe pattern object (which allows to access the given image if needed)")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getImage()"),"\nDirectly access the given image in case of FINDFAILED and MISSING."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe image object")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getMatch()"),"\nFor an ",Object(o.b)("inlineCode",{parentName:"p"},"APPEAR")," you get the ",Object(o.b)("inlineCode",{parentName:"p"},"Match")," object that appeared in the observed region (same as with ",Object(o.b)("inlineCode",{parentName:"p"},"wait()"),").\nFor a ",Object(o.b)("inlineCode",{parentName:"p"},"VANISH")," event, you get the last ",Object(o.b)("inlineCode",{parentName:"p"},"Match")," object that was found in the observed region before it vanished.\nThis method is not valid in a ",Object(o.b)("inlineCode",{parentName:"p"},"CHANGE")," event."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe match object")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getChanges()"),"\nGet a list of Match objects that represent the rectengular areas that changed their content. Their sizes are at least minChangedSize pixels.\nThis attribute is valid only in a CHANGE event."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tan unsorted list of match objects")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getCount()"),"\nGet the count how often the handler was visited."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe count as number")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getTime()"),"\nGet the time, when the event happened."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta long integer value according to the Java feature new Date().getTime()")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"repeat(","[waitTime]",")"),"\nSpecify the time in seconds, that the observation of this event should pause after returning from the handler."),Object(o.b)("p",null,"Remember APPEAR and VANISH events are stopped after the first occurence. You have to use an approriate repeat(), to continue the observation."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\twaitTime \u2013 seconds to pause, taken as 0 if not given")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getResponse()"),"\nIn case of FINDFAILED or MISSING get the current setting of the FindFailedResponse of the event region"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tPROMPT, RETRY, SKIP or ABORT")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setResponse(response)"),"\nIn case of FINDFAILED or MISSING set the FindFailedResponse of the event region. This will be the option, that is used after return from the handler for the final reaction."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tresponse \u2013 PROMPT, RETRY, SKIP or ABORT")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getName()"),"\nGet the unique name of this event for use with the appropriate features (see working with named events)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta string containing the name")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"stopObserver()"),"\nStop observation for this region (shortcut for event.getRegion().stopObserver())."),Object(o.b)("p",null,"Working with named observe events"),Object(o.b)("p",null,"Additionally to the callback-concept of the observation feature, it is possible, to start one or more observations in background, having registered events without handlers. When these events happen, the event is stored in a list and its observation is paused until the event is taken from the list. Both concepts can be combined per observation."),Object(o.b)("p",null,"Events without handlers are registered by omitting the handler parameter in the methods ",Object(o.b)("inlineCode",{parentName:"p"},"Region.onAppear()"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Region.onVanish()")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Region.onChange()")," and storing the returned name for later use."),Object(o.b)("p",null,"After having started the observation the usual way using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.observe()"),", you can check, wether any events have happened until now, you can access the events using their name or get a list of all events that happened until now. With the events themselves you can work exactly like in the handler concept (see: ObserveEvent)."),Object(o.b)("p",null,"The following methods are bound to the region under observation."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"hasObserver()"),"\nCheck wether at least one event is registered for this region. The observation might be running or not."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tTrue or False")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"isObserving()"),"\nCheck wether currently an observation is running for that region"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tTrue or False")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"hasEvents()"),"\nCheck wether any events have happened for that region"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tTrue or False")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getEvents()"),"\nGet the events, that have happened until this moment. The events are purged from the internal event list."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\ta list of ObserveEvent (might be empty)")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getEvent(name)"),"\nGet the named event and purge it from the internal event list"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tname \u2013 the name of the event (string)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe named event or None/null if it is not on the internal event list")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setInactive(name)"),"\nThe named event is paused during the running observation until activated again or the observation is restarted."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tname \u2013 the name of the event (string)")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setActive(name)"),"\nThe named event is activated, so it is observed during the running observation."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tname \u2013 the name of the event (string)")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"region-actions"},"Region Actions"),Object(o.b)("p",null,"Besides finding visual objects on the screen, acting on these elements is one of the kernel operations of SikuliX. Mouse actions can be simulated as well as pressing keys on a keyboard."),Object(o.b)("p",null,"The place on the screen, that should be acted on (in the end just one specific pixel, the click point), can be given either as a pattern like with the find operations or by directly referencing a pixel location or as center of a region object (match or screen also) or the target offset location connected with a match. Since all these choices can be used with all action methods as needed, they are abbreviated and called like this:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"PSMRL"),": which means, that either a Pattern object or a string (path to an image file or just plain text) or a Match or a Region or a Location can be used as parameter, in detail:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"P: pattern: a Pattern object. An implicit find operation is processed first. If successful, the center of the resulting matches rectangle is the click point. If the pattern object has a target offset specified, this is used as click point instead."),Object(o.b)("li",{parentName:"ul"},"S: string: a path to an image file or just plain text. An implicit find operation with the default minimum similarity 0.7 is processed first. If successful, the center of the resulting match object is the click point."),Object(o.b)("li",{parentName:"ul"},"M: match: a match object from a previous find operation. If the match has a target specified it is used as the click point, otherwise the center of the match\u2019s rectangle."),Object(o.b)("li",{parentName:"ul"},"R: region: a region object whose center is used as click point."),Object(o.b)("li",{parentName:"ul"},"L: location: a location object which by definition represents a point on the screen that is used as click point.\nIt is possible to simulate pressing the so called key modifiers together with the mouse operation or when simulating keyboard typing. The respective parameter is given by one or more predefined constants. If more than one modifier is necessary, they are combined by using \u201c+\u201d or \u201c|\u201d.")),Object(o.b)("p",null,"Normally all these region methods are used as ",Object(o.b)("inlineCode",{parentName:"p"},"reg.click(PS)"),", where reg is a region object. If written as ",Object(o.b)("inlineCode",{parentName:"p"},"click(PS)")," the implicit find is done on the default screen being the implicit region in this case (see: SCREEN as Default Region). But using ",Object(o.b)("inlineCode",{parentName:"p"},"reg.click(PS)")," will restrict the search to the region\u2019s rectangle and speed up processing, if region is significantly smaller than the whole screen."),Object(o.b)("p",null,"Generally all aspects of find operations and of ",Object(o.b)("inlineCode",{parentName:"p"},"Region.find()")," apply."),Object(o.b)("p",null,"If the find operation was successful, the match that was acted on, can be recalled using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatch()"),"."),Object(o.b)("p",null,"As a default, if the visual object (image or text) cannot be found, SikuliX will stop the script by raising an Exception ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed")," (details see: not found)."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"on IDE")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Capturing is a tool in the IDE, to quickly set up images to search for. These images are named automatically by the IDE and stored together with the script, at the time it is saved (we call the location in the file system bundle-path). Behind the curtain the images itself are specified by using a string containing the file name (path to an image file)."))),Object(o.b)("p",null,"Note on Mac: it might be necessary, to use ",Object(o.b)("inlineCode",{parentName:"p"},"switchApp()")," before, to prepare the application for accepting the action."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"click(PSMRL","[, modifiers]",")"),"\nPerform a mouse click on the click point using the left button."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Parameters:\nPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point.\nmodifiers \u2013 one or more key modifiers")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"Returns:\nthe number of performed clicks (actually 1). A 0 (integer null) means that because of some reason, no click could be performed (in case of PS may be not Found)."),Object(o.b)("p",{parentName:"li"},"Side Effect if PS was used, the match can be accessed using Region.getLastMatch() afterwards."))),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-code"},"# Windows XP\nclick()\n\n# Windows Vista\nclick()\n\n# Windows 7\nclick()\n\n# Mac\nclick()\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"doubleClick(PSMRL","[, modifiers]",")"),"\nPerform a mouse double-click on the click point using the left button."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\nPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point.\nmodifiers \u2013 one or more key modifiers"),Object(o.b)("li",{parentName:"ul"},"Returns:\nthe number of performed double-clicks (actually 1). A 0 (integer null) means that because of some reason, no click could be performed (in case of PS may be not Found).")),Object(o.b)("p",null,"Side Effect if PS was used, the match can be accessed using Region.getLastMatch() afterwards."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"rightClick(PSMRL","[, modifiers]",")"),"\nPerform a mouse click on the click point using the right button."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\nPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point.\nmodifiers \u2013 one or more key modifiers"),Object(o.b)("li",{parentName:"ul"},"Returns:\nthe number of performed right clicks (actually 1). A 0 (integer null) means that because of some reason, no click could be performed (in case of PS may be not Found).")),Object(o.b)("p",null,"Side Effect if PS was used, the match can be accessed using Region.getLastMatch() afterwards."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"highlight()"),"\nHighlight toggle (switched on if off and vice versa): highlight the region, showing a red colored frame around it, until the effect is stopped by another parameterless highlight call with the same region. The script continues."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"highlight(color)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\tcolor \u2013 see Note below\nHighlight toggle (switched on if off and vice versa): highlight the region, showing a frame with the given color around it, until the effect is stopped by another parameterless highlight call with the same region. The script continues.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"highlightOn()"),"\nDefinitely switch the highlight on (red frame, current state ignored). The script continues."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"highlightOn(color)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\tcolor \u2013 see Note below\nDefinitely switch the highlight on (True) (current state ignored) using the given color. The script continues.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"highlightOff()"),"\nDefinitely switch the highlight off (current state ignored). The script continues."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"highlightAllOff()"),"\nSwitch off all currently active highlights."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"highlight(seconds)"),"\nHighlight the region for the given time in seconds, showing a red colored frame around it."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\tseconds \u2013 a decimal number taken as duration in seconds\nThe region is highlighted showing the frame around it for the given time, while the script is suspended for this time.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"highlight(seconds, color)"),"\nHighlight the region for the given time in seconds, showing a frame with the given color around it."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\nseconds \u2013 a decimal number taken as duration in seconds\ncolor \u2013 see Note below\nThe region is highlighted showing a frame with the given color around it for the given time, while the script is suspended for the this time.")),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"There are these options to specify the color\nname of a color as string. The following names are accepted: black, blue, cyan, gray, green, magenta, orange, pink, red, white, yellow (lowercase and uppercase can be mixed, internally transformed to all uppercase)"),Object(o.b)("ul",{parentName:"div"},Object(o.b)("li",{parentName:"ul"},"the following color names exactly so: lightGray, LIGHT_GRAY, darkGray, DARK_GRAY"),Object(o.b)("li",{parentName:"ul"},"a string containing a hex value like in HTML: #XXXXXX (6 hex digits) specifying an RGB value"),Object(o.b)("li",{parentName:"ul"},"a string containing digits #rrrgggbbb, where rrr, ggg, bbb are integer values in range 0 - 255 padded with leading zeros if needed (hence exactly 9 digits) and so specifying an RGB value")))),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"m = find(some_image)\n\n# the red frame will blink for about 7 - 8 seconds\nfor i in range(5):\n        m.highlight(1)\n        wait(0.5)\n\n# a second red frame will blink as an overlay to the first one\nm.highlight()\nfor i in range(5):\n        m.highlight(1)\n        wait(0.5)\nm.highlight()\n\n# the red frame will grow 5 times\nfor i in range(5):\n        m.highlight(1)\n        m = m.nearby(20)\n")),Object(o.b)("p",null,"Note: The coloured frame is just an overlay in front of all other screen content and stays in its place, independently from the behavior of this other content, which means it is not \u201cconnected\u201d to the content of the defining region. But it will be adjusted automatically, if you change position and/or dimension of this region in your script, while it is highlighted."),Object(o.b)("p",null,"Note: Due to the implementation of this function, the target application might loose focus and opened menus or lists get closed again. In other cases the highlight frame is not or not completely visible (not getting to the front). In these cases the highlight feature cannot be used for tracking the search results."),Object(o.b)("p",null,"A possible workaround is to use ",Object(o.b)("inlineCode",{parentName:"p"},"hover()"),", to move the mouse over the match or even use a function like this"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"def hoverHighlight(reg, loop = 1):\nfor n in range(loop):\nhover(reg.getTopLeft()) hover(reg.getTopRight()) hover(reg.getBottomRight()) hover(reg.getBottomLeft()) hover(reg.getTopLeft())\nUsing this function instead of highlight will let the mousepointer visit the corners of the given region clockwise, starting and stopping top left. With the standard move delay of 0.5 seconds this will last about 2 seconds for one loop (second parameter, default 1).\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"hover(PSMRL)"),"\nMove the mouse cursor to hover above a click point."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\nPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point.\nmodifiers \u2013 one or more key modifiers"),Object(o.b)("li",{parentName:"ul"},"Returns:\nthe number 1 if the mousepointer could be moved to the click point. A 0 (integer null) returned means that because of some reason, no move could be performed (in case of PS may be not Found).")),Object(o.b)("p",null,"Side Effect if PS was used, the match can be accessed using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatch()")," afterwards."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"dragDrop(PSMRL, PSMRL","[, modifiers]",")"),"\nPerform a drag-and-drop operation from a starting click point to the target click point indicated by the two PSMRLs respectively."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\nPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point.\nmodifiers \u2013 one or more key modifiers\nIf one of the parameters is PS, the operation might fail due to not Found.")),Object(o.b)("p",null,"Sideffect: when using PS, the match of the target can be accessed using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatch()")," afterwards. If only the first parameter is given as PS, this match is returned by ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatch()"),"."),Object(o.b)("p",null,"If the operation does not perform as expected (usually caused by timing problems due to delayed reactions of applications), you may adjust the internal timing parameters ",Object(o.b)("inlineCode",{parentName:"p"},"Settings.DelayBeforeMouseDown"),", ",Object(o.b)("inlineCode",{parentName:"p"},"Settings.DelayBeforeDrag")," and ",Object(o.b)("inlineCode",{parentName:"p"},"Settings.DelayBeforeDrop")," (default value is 0.3 seconds) for the next action (timing is reset to default after the operation is completed). In case this might be combined with the internal timing parameter ",Object(o.b)("inlineCode",{parentName:"p"},"Settings.MoveMouseDelay"),"."),Object(o.b)("p",null,"Note: If you need to implement more sophisticated mouse and keyboard actions look at Low Level Mouse and Keyboard Actions."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"drag(PSMRL)"),"\nStart a drag-and-drop operation by starting the drag at the given click point."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\tPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point."),Object(o.b)("li",{parentName:"ul"},"Returns:\tthe number 1 if the operation could be performed. A 0 (integer null) returned means that because of some reason, no move could be performed (in case of PS may be not Found).\nThe mousepointer is moved to the click point and the left mouse button is pressed and held, until the button is released by a subsequent mouse action. (e.g. a ",Object(o.b)("inlineCode",{parentName:"li"},"Region.dropAt()")," afterwards).")),Object(o.b)("p",null,"If the operation does not perform as expected (usually caused by timing problems due to delayed reactions of applications), you may adjust the internal timing parameters Settings.DelayBeforeMouseDown, and Settings.DelayBeforeDrag (default value is 0.3 seconds) for the next action (timing is reset to default after the operation is completed)."),Object(o.b)("p",null,"Side Effect if PS was used, the match can be accessed using Region.getLastMatch() afterwards."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"dropAt(PSMRL","[, delay]",")"),"\nComplete a drag-and-drop operation by dropping a previously dragged item at the given target click point."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\tPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point."),Object(o.b)("li",{parentName:"ul"},"Returns:\tthe number 1 if the operation could be performed. A 0 (integer null) returned means that because of some reason, no move could be performed (in case of PS may be not Found).\nThe mousepointer is moved to the click point and the left mouse button is released. If it is necessary to visit one ore more click points after dragging and before dropping, you can use ",Object(o.b)("inlineCode",{parentName:"li"},"Region.mouseMove()")," or ",Object(o.b)("inlineCode",{parentName:"li"},"Region.hover()")," inbetween and dropAt only for the final destination.")),Object(o.b)("p",null,"If the operation does not perform as expected (usually caused by timing problems due to delayed reactions of applications), you may adjust the internal timing parameter ",Object(o.b)("inlineCode",{parentName:"p"},"Settings.DelayBeforeDrop")," (default value is 0.3 seconds) for the next action (timing is reset to default after the operation is completed)."),Object(o.b)("p",null,"Side Effect if PS was used, the match can be accessed using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatch()")," afterwards."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"type(","[PSMRL, ]","text","[, modifiers]",")"),"\nType the text at the current focused input field or at a click point specified by PSMRL."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\nPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point.\nmodifiers \u2013 one or more modifier keys (Class Key)"),Object(o.b)("li",{parentName:"ul"},"Returns:\nthe number 1 if the operation could be performed, otherwise 0 (integer null), which means, that because of some reason, it was not possible or the click could be performed (in case of PS may be not Found).")),Object(o.b)("p",null,"This method simulates keyboard typing interpreting the characters of text based on the layout/keymap of the standard US keyboard (QWERTY)."),Object(o.b)("p",null,"Special keys (",Object(o.b)("inlineCode",{parentName:"p"},"ENTER"),", ",Object(o.b)("inlineCode",{parentName:"p"},"TAB"),", ",Object(o.b)("inlineCode",{parentName:"p"},"BACKSPACE"),", \u2026) can be incorporated into text using the constants defined in Class ",Object(o.b)("inlineCode",{parentName:"p"},"Key")," using the standard string concatenation +."),Object(o.b)("p",null,"If PSMRL is given, a click on the clickpoint is performed before typing, to gain the focus. (Mac: it might be necessary, to use switchApp() to give focus to a target application before, to accept typed/pasted characters.)"),Object(o.b)("p",null,"If PSMRL is omitted, it performs the typing on the current focused visual component (normally an input field or an menu entry that can be selected by typing something)."),Object(o.b)("p",null,"Side Effect if PS was used, the match can be accessed using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatch()")," afterwards."),Object(o.b)("p",null,"Note: If you need to type international characters or you are using layouts/keymaps other than US-QWERTY, you should use ",Object(o.b)("inlineCode",{parentName:"p"},"Region.paste()")," instead. Since ",Object(o.b)("inlineCode",{parentName:"p"},"type()")," is rather slow because it simulates each key press, for longer text it is preferrable to use ",Object(o.b)("inlineCode",{parentName:"p"},"Region.paste()"),". Best Practice: As a general guideline, the best choice is to use ",Object(o.b)("inlineCode",{parentName:"p"},"paste()")," for readable text and ",Object(o.b)("inlineCode",{parentName:"p"},"type()")," for action keys like TAB, ENTER, ESC, \u2026. Use one ",Object(o.b)("inlineCode",{parentName:"p"},"type()")," for each key or key combination and be aware, that in some cases a short ",Object(o.b)("inlineCode",{parentName:"p"},"wait()")," after a ",Object(o.b)("inlineCode",{parentName:"p"},"type()")," might be necessary to give the target application some time to react and be prepared for the next SikuliX action."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"paste(","[PSMRL, ]","text)"),"\nPaste the text at a click point."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Parameters:\nPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point.\nmodifiers \u2013 one or more key modifiers"),Object(o.b)("li",{parentName:"ul"},"Returns:\nthe number 1 if the operation could be performed, otherwise 0 (integer null), which means, that because of some reason, it was not possible or the click could be performed (in case of PS may be not Found).")),Object(o.b)("p",null,"Pastes text using the clipboard (OS-level shortcut (Ctrl-V or Cmd-V)). So afterwards your clipboard contains text. paste() is a temporary solution for typing international characters or typing on keyboard layouts other than US-QWERTY."),Object(o.b)("p",null,"If PSMRL is given, a click on the clickpoint is performed before typing, to gain the focus. (Mac: it might be necessary, to use switchApp() to give focus to a target application before, to accept typed/pasted characters.)"),Object(o.b)("p",null,"If PSMRL is omitted, it performs the paste on the current focused component (normally an input field)."),Object(o.b)("p",null,"Side Effect if PS was used, the match can be accessed using ",Object(o.b)("inlineCode",{parentName:"p"},"Region.getLastMatch()")," afterwards."),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"Special keys (ENTER, TAB, BACKSPACE, \u2026) cannot be used with ",Object(o.b)("inlineCode",{parentName:"p"},"paste()"),". If needed, you have to split your complete text into two or more ",Object(o.b)("inlineCode",{parentName:"p"},"paste()")," and use ",Object(o.b)("inlineCode",{parentName:"p"},"type()")," for typing the special keys inbetween. Characters like \\n (enter/new line) and \\t (tab) should work as expected with ",Object(o.b)("inlineCode",{parentName:"p"},"paste()"),", but be aware of timing problems, when using e.g. intervening \\t to jump to the next input field of a form."))),Object(o.b)("p",null,'Be aware: Python scripting In the IDE you can use Unicode/UTF8 characters, since this is the default encoding for the script text. The current Jython still is at Python level 2.7, which does not support UTF8 characters natively in the way it is expected by the underlying Java API. There is a convenience function available unicd("some text containing non-ascii characters), that can be used, to make a string acceptable for the Java layer.'),Object(o.b)("p",null,"Example:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-code"},'paste("\u0439\u0446\u0443\u043a\u0435") # will end up in some garbage\npaste(unicd("\u0439\u0446\u0443\u043a\u0435")) # will work as expected\n')),Object(o.b)("hr",null),Object(o.b)("h2",{id:"extracting-text-from-a-region"},"Extracting Text from a Region"),Object(o.b)("p",null,"The text and OCR features are completely revised. Everything is now available at the Java level through the use of Tess4j, which in turn is a wrapper around the native library Tesseract. More details can be found here."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"text()"),"\nExtract the text contained in the region using OCR."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe text as a string (unicode). Multiple lines of text are separated by intervening linefeeds.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"collectWords()"),"\nExtract the text contained in the region as a list of the words (in fact match objects - see example) in order top left to bottom right:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-code"},"words = someRegion.collectWords() # a list of match objects\nfirstWordMatch = words[0] # the region on screen containing the word\nfirstWord = firstWordMatch.getText() # finally the text contained in the word's region\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe text as a list of match/regions containing words. (Java: ",Object(o.b)("inlineCode",{parentName:"li"},"List<Match>"),"). Use ",Object(o.b)("inlineCode",{parentName:"li"},"Match.getText()")," to get a single text string.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"collectLines()"),"\nExtract the text contained in the region as a list of the words (in fact match objects - see example) in order top left to bottom right:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-code"},"lines = someRegion.collectLines() # a list of match objects\nfirstLineMatch = lines[0] # the region on screen containing the line\nfirstLine = firstLineMatch.getText() # finally the text contained in the line's region\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe text as a list of match/regions containing lines. (Java: ",Object(o.b)("inlineCode",{parentName:"li"},"List<Match>"),") Use ",Object(o.b)("inlineCode",{parentName:"li"},"Match.getText()")," to get a single text string.\nAs a convenience there are variants that only return a list of the words/lines as text (Java: ",Object(o.b)("inlineCode",{parentName:"li"},"List<String>"),") (hence no information, where on the screen they are):")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-code"},"words = collectWordsText() # only the list of words in order top left to bottom right\nlines = collectLinesText() # only the list of textlines in order top left to bottom right\n")),Object(o.b)("p",null,"BE AWARE in Jython scripts The text is returned as unicode strings. Jython standard strings are not aware of unicode and hence will produce garbage or error messages when used with the normal print statement.\nThere is a convenience print function uprint(someText, someOtherTexdt, ...), which is aware of the unicode situation:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'words = collectWordsText()\nfor word in words:\n    uprint(word)\n\n# or as one line\nline = ""\nfor word in words:\n    line += word + ", "\nuprint(line)\n')),Object(o.b)("hr",null),Object(o.b)("h2",{id:"mouse-and-keyboard-actions"},"Mouse and Keyboard Actions"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\n",Object(o.b)("strong",{parentName:"p"},"mouseDown(button)"),"\nPress the mouse button down."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tbutton \u2013 one or a combination of the button constants Button.LEFT, Button.MIDDLE, Button.RIGHT."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe number 1 if the operation is performed successfully, and zero if otherwise.\nThe mouse button or buttons specified by button are pressed until another mouse action is performed.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"mouseUp(","[button]",")"),"\nRelease the mouse button previously pressed."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tbutton \u2013 one or a combination of the button constants Button.LEFT, Button.MIDDLE, Button.RIGHT."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe number 1 if the operation is performed successfully, and zero if otherwise.\nThe button specified by button is released. If button is omitted, all currently pressed buttons are released.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"mouseMove(PSRML)"),"\nMove the mouse pointer to a location indicated by PSRML."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe number 1 if the operation could be performed. If using PS (which invokes an implicity find operation), find fails and you have switched off FindFailed exception, a 0 (integer null) is returned. Otherwise, the script is stopped with a FindFailed exception.\nSideeffects: when using PS, the match can be accessed using Region.getLastMatch() afterwards")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"mouseMove(xoff, yoff)"),"\nMove the mouse pointer from it\u2019s current position to the position given by the offset values (<0 left, up >0 right, down)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nxoff \u2013 horizontal offset\nyoff \u2013 vertical offset"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\n1 if possible, 0 otherwise")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"wheel(PSRML, direction, steps)"),"\nMove the mouse pointer to a location indicated by PSRML and turn the mouse wheel in the specified direction by the specified number of steps."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nPSMRL \u2013 a pattern, a string, a match, a region or a location that evaluates to a click point.\ndirection \u2013 one of the button constants Button.WHEEL_DOWN or Button.WHEEL_UP denoting the wheeling direction.\nsteps \u2013 an integer indicating the amoung of wheeling.")),Object(o.b)("p",null,"Sideeffects: when using PS, the match can be accessed using Region.getLastMatch() afterwards"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"keyDown(key | list-of-keys)"),"\nPress and hold the specified key(s) until released by a later call to Region.keyUp()."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tkey|list-of-keys \u2013 one or more keys (use the consts of class Key). A list of keys is a concatenation of several key constants using \u201c+\u201d."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe number 1 if the operation could be performed and 0 if otherwise.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"keyUp(","[key | list-of-keys]",")"),"\nRelease given keys. If no key is given, all currently pressed keys are released."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tkey|list-of-keys \u2013 one or more keys (use the consts of class Key). A list of keys is a concatenation of several key constants using \u201c+\u201d."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tthe number 1 if the operation could be performed and 0 if otherwise.")),Object(o.b)("hr",null),Object(o.b)("h2",{id:"exception-findfailed"},"Exception FindFailed"),Object(o.b)("p",null,"As a default, find operations (explicit and implicit) when not successful raise an Exception FindFailed, that will stop the script immediately."),Object(o.b)("p",null,"To implement some checkpoints, where you want to asure your workflow, use ",Object(o.b)("inlineCode",{parentName:"p"},"Region.exists()"),", that reports a not found situation without raising ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed")," (returns False instead)."),Object(o.b)("p",null,"To run all or only parts of your script without FindFailed exceptions to be raised, use ",Object(o.b)("inlineCode",{parentName:"p"},"Region.setThrowException()")," or ",Object(o.b)("inlineCode",{parentName:"p"},"Region.setFindFailedResponse()")," to switch it on and off as needed."),Object(o.b)("p",null,"For more sophisticated concepts, you can implement your own exception handling using the standard Python construct try: ... except: ... ."),Object(o.b)("p",null,"Generally a ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed")," situation is also signalled (besides that the image could not found on the screen), if the image could not be found on the current image path and hence could not be loaded for the find process."),Object(o.b)("p",null,"To implement even more sophisticated concepts, it is possible to declare handler functions, that are visited in case of a ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed")," and/or ImageMissing situations and allow to take corrective actions. Before leaving the handler you can specify how the case should finally be handled (ABORT, SKIP, RETRY or PROMPT). If specified, a handler is always visited before any other action is taken. Handlers can be specified for a single Region object and/or globally with class ",Object(o.b)("inlineCode",{parentName:"p"},"FindFailed"),", so that each new Region object afterwards would call this handler in case."),Object(o.b)("p",null,"The PROMPT response now allows to recapture the image on the fly or just to capture an image, that is not loadable."),Object(o.b)("p",null,"These are the possibilities to handle \u201cnot found\u201d situations:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"generally abort a script, if not handled with try: ... except: ...\n(the default setting or using setThrowException(True) or setFindFailedResponse(ABORT))")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"generally ignore all \u201cnot found\u201d situations\n(using setThrowException(False) or setFindFailedResponse(SKIP)),")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"want to be prompted in such a case\n(using setFindFailedResponse(PROMPT))")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"advise Sikuli to wait forever (be careful with that!)\n(using setFindFailedResponse(RETRY))")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("p",{parentName:"li"},"advise Sikuli to visit the specified handler before taking any other action\n(using setFindFailedHandler(handler))"))),Object(o.b)("p",null,"Comment on using PROMPT:"),Object(o.b)("p",null,"This feature is helpful in following situations:"),Object(o.b)("p",null,"you are developing something, that needs an application with it\u2019s windows to be in place, but this workflow you want to script later. If it comes to that point, you get the prompt, arrange the app and click Retry. Your workflow should continue.\nyou have a workflow, where the user might do some corrective actions, if you get a FindFailed\nguess you find more ;-)\nIn case of a FindFailed, you get the following prompt:"),Object(o.b)("p",null,"_images/findfailed-prompt.png"),Object(o.b)("p",null,"Clicking Retry would again try to find the image. Capture/Skip would allow to (re)capture the image and Abort would end the script. In case of clicking Capture you get another similar prompt, that allows you to either do the capture, finally skip or advise SikuliX to abort the script immediately."),Object(o.b)("p",null,"Examples: 4 solutions for a case, where you want to decide how to proceed in a workflow based on the fact that a specific image can be found. (pass is the python statement, that does nothing, but maintains indentation to form the blocks):"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'# --- nice and easy\nif exists("path-to-image"): # no exception, returns None when not found\n        pass # it is there\nelse:\n        pass # we miss it\n\n# --- using exception handling\n# every not found in the try block will switch to the except block\ntry:\n        find("path-to-image")\n        pass # it is there\nexcept FindFailed:\n        pass # we miss it\n\n# --- using setFindFailedResponse\nsetFindFailedResponse(SKIP) # no exception raised, not found returns None\nif find("path-to-image"):\n        setFindFailedResponse(ABORT) # reset to default\n        pass # it is there\nelse:\n        setFindFailedResponse(ABORT) # reset to default\n        pass # we miss it\n\n# --- using setThrowException\nsetThrowException(False) # no exception raised, not found returns None\nif find("path-to-image"):\n        setThrowException(True) # reset to default\n        pass # it is there\nelse:\n        setThrowException(True) # reset to default\n        pass # we miss it\n')),Object(o.b)("p",null,"Comment on using a handler function:"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setFindFailedHandler(functionname)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tfunctionname \u2013 the name of a function, that should handle FindFailed situations (no apostrophes!)")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setImageMissingHandler(functionname)")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\tfunctionname \u2013 the name of a function, that should handle ImageMissing situations (no apostrophes!)\nTo specify the respective handlers globally for all new Regions use FindFailed.setFindFailedHandler (or as a shortcut for that: FindFailed.setHandler) and FindFailed.setImageMissingHandler respectively.")),Object(o.b)("p",null,"Both methods might name the same handler function, since it is possible to differentiate the situation to handle by inspecting the type of the event, that is the parameter, when the handler is called. On the other hand with 2 handlers it is easier and more transparent to handle both situations completely different."),Object(o.b)("p",null,"This is a basic handler:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'def handler(event):\n    print "handler entered for", event.getType()\n    # type here might be FINDFAILED or MISSING\n    # do something\n    event.setResponse(PROMPT) # now go back and prompt the user\n    # or use RETRY, SKIP or ABORT\n')),Object(o.b)("p",null,"For more information on the possibilities in a handler see ObserveEvent."),Object(o.b)("p",null,"Note for Java And this is how you setup a handler in your Java program:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"someRegion.setFindFailedHandler(new ObserveCallback() {\n        @Override\n        public void findfailed(ObserveEvent event) {\n                // here goes your handler code\n        }\n});\n")),Object(o.b)("p",null,"\u2026 and to set globally:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"FindFailed.setFindFailedHandler(new ObserveCallback() {\n        @Override\n        public void findfailed(ObserveEvent event) {\n                // here goes your handler code\n        }\n});\n")),Object(o.b)("p",null,"\u2026 for the image missing situation combine setImageMissingHandler with overriding missing."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"class Region"),"\nReminder If used without specifying a region, the default/primary screen (default region SCREEN) is used."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setFindFailedResponse(ABORT | SKIP | PROMPT | RETRY)"),"\nFor the specified region set the option, how Sikuli should handle \u201cnot found\u201d situations. The option stays in effect until changed by another setFindFailedResponse()."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nABORT \u2013 all subsequent find failed operations (explicit or implicit) will raise exception FindFailed (which is the default when a script is started).\nSKIP \u2013 all subsequent find operations will not raise exception FindFailed. Instead, explicit find operations such as Region.find() will return None. Implicit find operations (action functions) such as Region.click() will do nothing and return 0.\nPROMPT \u2013 all subsequent find operations will not raise exception FindFailed. Instead you will be prompted for the way to handle the situation (see using PROMPT). Only the current find operation is affected by your response to the prompt.\nRETRY \u2013 all subsequent find operations will not raise exception FindFailed. Instead, Sikuli will try to find the target until it gets visible. This is equivalent to using wait( ... , FOREVER) instead of find() or using setAutoWaitTimeout(FOREVER).")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setFindFailedHandler(handler)"),"\nFor all subsequent find failed operations (explicit or implicit) the specified handler should be visited in case of FindFailed or image not loadable. (see using a FindFailed handler)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\thandler \u2013 the name of the handler function that should be visited.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getFindFailedResponse()"),"\nGet the current setting in this region."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tABORT or SKIP or PROMPT or RETRY"),Object(o.b)("li",{parentName:"ul"},"Usage:")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},'   val = getFindFailedResponse()\n   if val == ABORT:\n         print "not found will stop script with Exception FindFailed"\n   elif val == SKIP:\n         print "not found will be ignored"\n   elif val == PROMPT:\n         print "when not found you will be prompted"\n   elif val == RETRY:\n         print "we will always wait forever"\n   else:\n         print val, ": this is a bug :-("\n')),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"It is recommended to use set/getFindFailedResponse() instead of set/getThrowException() since the latter ones might be deprecated in the future."))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"setThrowException(False | True)"),"\nBy using this method you control, how Sikuli should handle not found situations in this region."),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Parameters"),":\nTrue \u2013 all subsequent find operations (explicit or implicit) will raise exception FindFailed (which is the default when a script is started) in case of not found.\nFalse \u2013 all subsequent find operations will not raise exception FindFailed. Instead, explicit find operations such as Region.find() will return None. Implicit find operations (action functions) such as Region.click() will do nothing and return 0.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"getThrowException()")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Returns"),":\tTrue or False\nGet the current setting as True or False (after start of script, this is True by default) in this region.")),Object(o.b)("p",null,"Grouping Method Calls ( with Region: )\nInstead of:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"# reg is a region object\nif not reg.exists(image1):\n        reg.click(image2)\n        reg.wait(image3, 10)\n        reg.doubleClick(image4)\n")),Object(o.b)("p",null,"you can group methods applied to the same region using Python\u2019s with syntax:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"# reg is a region object\nwith reg:\n        if not exists(image1):\n                click(image2)\n        wait(image3, 10)\n        doubleClick(image4)\n\n")),Object(o.b)("p",null,"All methods inside the with block (mind indentation) that have the region omitted are redirected to the region object specified at the with statement."),Object(o.b)("p",null,"IMPORTANT Usage Note"),Object(o.b)("p",null,"This only works without problems for region objects created on the scripting level using one of the constructors Region()."),Object(o.b)("p",null,"Region objects created with Region methods, that return new region objects, might not work though in some cases."),Object(o.b)("p",null,"If you get strange results or errors in the with block (e.g. syntax error ",Object(o.b)("strong",{parentName:"p"},"enter")," is not defined for this region) cast your Region object to a scripting level Region object using"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"castedRegion = Region(regionNotWorking)")," and use ",Object(o.b)("inlineCode",{parentName:"p"},"castedRegion")," in the with clause"),Object(o.b)("p",null,"or do it like this:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-java"},"# reg is a scripting level region object\nregNew = reg.left() # returns a non-scripting-level region object\nwith Region(regNew):\n        if not exists(image1):\n                click(image2)\n        wait(image3, 10)\n        doubleClick(image4)\n")),Object(o.b)("hr",null))}b.isMDXComponent=!0}}]);